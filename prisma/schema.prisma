generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  passwordHash String
  isAdmin      Boolean    @default(false)
  mfaEnabled   Boolean    @default(false)
  mfaSecret    String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  auditLogs    AuditLog[]
}

model Client {
  id                Int              @id @default(autoincrement())
  _name             String
  _primaryContact   String
  _secondaryContact String?
  status            String           @default("ONBOARD")
  remarks           String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  projects          Project[]
  privateNetworks   PrivateNetwork[]
  publicIps         PublicIp[]
  vpuUsers          VpuUser[]
}

model Project {
  id        Int      @id @default(autoincrement())
  clientId  Int
  vcpu      Int
  ram       Int
  storage   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client   @relation(fields: [clientId], references: [id])
}

model PrivateNetwork {
  id        Int      @id @default(autoincrement())
  clientId  Int
  network   String
  type      String   @default("POOL")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client   @relation(fields: [clientId], references: [id])
}

model PublicIp {
  id        Int      @id @default(autoincrement())
  clientId  Int
  ipAddress String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client   @relation(fields: [clientId], references: [id])
}

model VpuUser {
  id        Int      @id @default(autoincrement())
  clientId  Int
  _username String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client   @relation(fields: [clientId], references: [id])
}

model AuditLog {
  id         Int      @id @default(autoincrement())
  userId     Int
  action     String
  entityType String
  entityId   Int
  oldValues  String?
  newValues  String?
  ipAddress  String
  timestamp  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}
